const t=JSON.parse('{"key":"v-74817fbc","path":"/posts/note/Java/%E6%B3%A8%E8%A7%A3.html","title":"注解","lang":"zh-CN","frontmatter":{"title":"注解","author":{"name":"北斗星司"},"category":["基础知识"],"tag":["语法"],"date":"2023-07-12T15:08:32.000Z","icon":"file","description":"定义 不是程序本身，可以对程序作出解释，与注释类似。 可以被其他程序(如，编译器)读取。如果没有注解信息处理流程，则注解毫无意义。 可以附加在package，class，method，field等上面，相当于添加了额外的辅助信息，可以通过反射访问这些元数据。 作用： 生成文档，通过代码里标识的元数据生成javadoc文档。 编译检查，通过代码里标识的元数据让编译器在编译期间进行检查验证。 编译时动态处理，编译时通过代码里标识的元数据动态处理，例如，动态生成代码。 运行时动态处理，运行时通过代码里标识的元数据动态处理，例如，使用反射注入实例。","head":[["meta",{"property":"og:url","content":"https://mtgd106.github.io/posts/note/Java/%E6%B3%A8%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"北斗星司"}],["meta",{"property":"og:title","content":"注解"}],["meta",{"property":"og:description","content":"定义 不是程序本身，可以对程序作出解释，与注释类似。 可以被其他程序(如，编译器)读取。如果没有注解信息处理流程，则注解毫无意义。 可以附加在package，class，method，field等上面，相当于添加了额外的辅助信息，可以通过反射访问这些元数据。 作用： 生成文档，通过代码里标识的元数据生成javadoc文档。 编译检查，通过代码里标识的元数据让编译器在编译期间进行检查验证。 编译时动态处理，编译时通过代码里标识的元数据动态处理，例如，动态生成代码。 运行时动态处理，运行时通过代码里标识的元数据动态处理，例如，使用反射注入实例。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mtgd106.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"注解"}],["meta",{"property":"article:author","content":"北斗星司"}],["meta",{"property":"article:tag","content":"语法"}],["meta",{"property":"article:published_time","content":"2023-07-12T15:08:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"注解\\",\\"image\\":[\\"https://mtgd106.github.io/\\"],\\"datePublished\\":\\"2023-07-12T15:08:32.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"北斗星司\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"格式","slug":"格式","link":"#格式","children":[]},{"level":2,"title":"内置注解","slug":"内置注解","link":"#内置注解","children":[]},{"level":2,"title":"元注解","slug":"元注解","link":"#元注解","children":[]},{"level":2,"title":"获取注解","slug":"获取注解","link":"#获取注解","children":[]},{"level":2,"title":"自定义注解","slug":"自定义注解","link":"#自定义注解","children":[]},{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"","slug":"","link":"#","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":11.13,"words":2225},"filePathRelative":"posts/note/Java/注解.md","localizedDate":"2023年7月12日","excerpt":"<!-- permalink: /    -->\\n<h2> 定义</h2>\\n<ol>\\n<li>\\n<p>不是程序本身，可以对程序作出解释，与注释类似。</p>\\n</li>\\n<li>\\n<p>可以被其他程序(如，编译器)读取。如果没有注解信息处理流程，则注解毫无意义。</p>\\n</li>\\n<li>\\n<p>可以附加在package，class，method，field等上面，相当于添加了额外的辅助信息，可以通过反射访问这些元数据。</p>\\n</li>\\n</ol>\\n<p>作用：</p>\\n<ol>\\n<li>\\n<p>生成文档，通过代码里标识的元数据生成javadoc文档。</p>\\n</li>\\n<li>\\n<p>编译检查，通过代码里标识的元数据让编译器在编译期间进行检查验证。</p>\\n</li>\\n<li>\\n<p>编译时动态处理，编译时通过代码里标识的元数据动态处理，例如，动态生成代码。</p>\\n</li>\\n<li>\\n<p>运行时动态处理，运行时通过代码里标识的元数据动态处理，例如，使用反射注入实例。</p>\\n</li>\\n</ol>","copyright":{"author":"北斗星司"},"autoDesc":true}');export{t as data};
