const e=JSON.parse('{"key":"v-332eea84","path":"/posts/note/Java/%E5%8F%8D%E5%B0%84.html","title":"反射","lang":"zh-CN","frontmatter":{"title":"反射","author":{"name":"北斗星司"},"category":["基础知识"],"tag":["语法"],"date":"2023-07-12T15:08:32.000Z","icon":"file","description":"反射机制 反射，指的是可以于运行时加载、探知、使用编译期间完全未知的类。 JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用 它的任意一个方法和属性；这种动态获取信息以及动态调用对象方法的功能称为java语言的反射机制。 例： Class c = Class. forName (\\"com.vkls.User\\");","head":[["meta",{"property":"og:url","content":"https://mtgd106.github.io/posts/note/Java/%E5%8F%8D%E5%B0%84.html"}],["meta",{"property":"og:site_name","content":"北斗星司"}],["meta",{"property":"og:title","content":"反射"}],["meta",{"property":"og:description","content":"反射机制 反射，指的是可以于运行时加载、探知、使用编译期间完全未知的类。 JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用 它的任意一个方法和属性；这种动态获取信息以及动态调用对象方法的功能称为java语言的反射机制。 例： Class c = Class. forName (\\"com.vkls.User\\");"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mtgd106.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"反射"}],["meta",{"property":"article:author","content":"北斗星司"}],["meta",{"property":"article:tag","content":"语法"}],["meta",{"property":"article:published_time","content":"2023-07-12T15:08:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"反射\\",\\"image\\":[\\"https://mtgd106.github.io/\\"],\\"datePublished\\":\\"2023-07-12T15:08:32.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"北斗星司\\"}]}"]]},"headers":[{"level":2,"title":"反射机制","slug":"反射机制","link":"#反射机制","children":[]},{"level":2,"title":"Class类","slug":"class类","link":"#class类","children":[]},{"level":2,"title":"获取Class对象","slug":"获取class对象","link":"#获取class对象","children":[]},{"level":2,"title":"Class类的方法","slug":"class类的方法","link":"#class类的方法","children":[]},{"level":2,"title":"获取构造方法","slug":"获取构造方法","link":"#获取构造方法","children":[]},{"level":2,"title":"获取成员变量","slug":"获取成员变量","link":"#获取成员变量","children":[]},{"level":2,"title":"获取成员方法","slug":"获取成员方法","link":"#获取成员方法","children":[]},{"level":2,"title":"获取包名和类名","slug":"获取包名和类名","link":"#获取包名和类名","children":[]},{"level":2,"title":"反射操作泛型","slug":"反射操作泛型","link":"#反射操作泛型","children":[]},{"level":2,"title":"反射获取注解","slug":"反射获取注解","link":"#反射获取注解","children":[]},{"level":2,"title":"","slug":"","link":"#","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":17.69,"words":3538},"filePathRelative":"posts/note/Java/反射.md","localizedDate":"2023年7月12日","excerpt":"<!-- permalink: /    -->\\n<h2> 反射机制</h2>\\n<p><strong>反射，指的是可以于运行时加载、探知、使用编译期间完全未知的类。</strong></p>\\n<p>JAVA反射机制是在运行状态中，<strong>对于任意一个类，都能够知道这个类的所有属性和方法</strong>；对于任意一个对象，都能够调用</p>\\n<p>它的任意一个方法和属性；这种动态获取信息以及动态调用对象方法的功能称为java语言的反射机制。</p>\\n<p>例：</p>\\n<p><code>Class c = Class. forName (\\"com.vkls.User\\");</code></p>","copyright":{"author":"北斗星司"},"autoDesc":true}');export{e as data};
