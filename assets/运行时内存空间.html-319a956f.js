const e=JSON.parse('{"key":"v-67edb0c2","path":"/posts/note/JVM/%E8%BF%90%E8%A1%8C%E6%97%B6%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4.html","title":"运行时内存空间","lang":"zh-CN","frontmatter":{"title":"运行时内存空间","author":{"name":"北斗星司"},"category":["原理"],"tag":["JVM"],"date":"2023-10-23T15:08:32.000Z","icon":"file","description":"运行时内存空间 概述 运行时数据区： 运行时数据区完整图： ​\\t 线程 线程是一个程序里的运行单元。JVM允许一个应用有多个线程并行的执行。 在Hotspot JVM里，每个线程都与操作系统的本地线程直接映射。当一个Java线程准备好执行以后，此时一个操作系统的本地线程也同时创建。","head":[["meta",{"property":"og:url","content":"https://mtgd106.github.io/posts/note/JVM/%E8%BF%90%E8%A1%8C%E6%97%B6%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4.html"}],["meta",{"property":"og:site_name","content":"北斗星司"}],["meta",{"property":"og:title","content":"运行时内存空间"}],["meta",{"property":"og:description","content":"运行时内存空间 概述 运行时数据区： 运行时数据区完整图： ​\\t 线程 线程是一个程序里的运行单元。JVM允许一个应用有多个线程并行的执行。 在Hotspot JVM里，每个线程都与操作系统的本地线程直接映射。当一个Java线程准备好执行以后，此时一个操作系统的本地线程也同时创建。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mtgd106.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-06T06:59:59.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"运行时内存空间"}],["meta",{"property":"article:author","content":"北斗星司"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:published_time","content":"2023-10-23T15:08:32.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-06T06:59:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"运行时内存空间\\",\\"image\\":[\\"https://mtgd106.github.io/\\"],\\"datePublished\\":\\"2023-10-23T15:08:32.000Z\\",\\"dateModified\\":\\"2023-11-06T06:59:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"北斗星司\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[{"level":3,"title":"线程","slug":"线程","link":"#线程","children":[]},{"level":3,"title":"线程独有和共享","slug":"线程独有和共享","link":"#线程独有和共享","children":[]},{"level":3,"title":"JVM 系统线程","slug":"jvm-系统线程","link":"#jvm-系统线程","children":[]}]},{"level":2,"title":"程序计数器","slug":"程序计数器","link":"#程序计数器","children":[{"level":3,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"作用","slug":"作用","link":"#作用","children":[]}]},{"level":2,"title":"虚拟机栈","slug":"虚拟机栈","link":"#虚拟机栈","children":[]},{"level":2,"title":"栈帧","slug":"栈帧","link":"#栈帧","children":[{"level":3,"title":"概述","slug":"概述-1","link":"#概述-1","children":[]},{"level":3,"title":"局部变量表","slug":"局部变量表","link":"#局部变量表","children":[]},{"level":3,"title":"操作数栈","slug":"操作数栈","link":"#操作数栈","children":[]},{"level":3,"title":"动态链接","slug":"动态链接","link":"#动态链接","children":[]},{"level":3,"title":"方法返回地址","slug":"方法返回地址","link":"#方法返回地址","children":[]}]},{"level":2,"title":"堆","slug":"堆","link":"#堆","children":[{"level":3,"title":"概述","slug":"概述-2","link":"#概述-2","children":[]},{"level":3,"title":"堆的内存划分","slug":"堆的内存划分","link":"#堆的内存划分","children":[]},{"level":3,"title":"堆空间参数设置","slug":"堆空间参数设置","link":"#堆空间参数设置","children":[]},{"level":3,"title":"逃逸分析","slug":"逃逸分析","link":"#逃逸分析","children":[]}]},{"level":2,"title":"方法区","slug":"方法区","link":"#方法区","children":[{"level":3,"title":"栈，堆，方法区的交互关系","slug":"栈-堆-方法区的交互关系","link":"#栈-堆-方法区的交互关系","children":[]},{"level":3,"title":"概述","slug":"概述-3","link":"#概述-3","children":[]},{"level":3,"title":"方法区内部结构","slug":"方法区内部结构","link":"#方法区内部结构","children":[]},{"level":3,"title":"常量池","slug":"常量池","link":"#常量池","children":[]},{"level":3,"title":"运行时常量池","slug":"运行时常量池","link":"#运行时常量池","children":[]},{"level":3,"title":"方法区的演变","slug":"方法区的演变","link":"#方法区的演变","children":[]},{"level":3,"title":"方法区的垃圾回收","slug":"方法区的垃圾回收","link":"#方法区的垃圾回收","children":[]}]},{"level":2,"title":"本地方法栈","slug":"本地方法栈","link":"#本地方法栈","children":[{"level":3,"title":"本地方法(Native Method)","slug":"本地方法-native-method","link":"#本地方法-native-method","children":[]},{"level":3,"title":"本地方法栈","slug":"本地方法栈-1","link":"#本地方法栈-1","children":[]}]}],"git":{"createdTime":1699253999000,"updatedTime":1699253999000,"contributors":[{"name":"mtgd106","email":"1487722388@qq.com","commits":1}]},"readingTime":{"minutes":59.74,"words":11947},"filePathRelative":"posts/note/JVM/运行时内存空间.md","localizedDate":"2023年10月23日","excerpt":"<!-- permalink: /JVM/ -->\\n<h1> 运行时内存空间</h1>\\n<h2> 概述</h2>\\n<p><strong>运行时数据区：</strong></p>\\n<figure><figcaption></figcaption></figure>\\n<p><strong>运行时数据区完整图：</strong></p>\\n<p>​\\t  </p>\\n<h3> 线程</h3>\\n<p>线程是一个程序里的运行单元。JVM允许一个应用有多个线程并行的执行。</p>\\n<p>在Hotspot JVM里，每个线程都与操作系统的本地线程直接映射。当一个Java线程准备好执行以后，此时一个操作系统的本地线程也同时创建。</p>","copyright":{"author":"北斗星司"},"autoDesc":true}');export{e as data};
