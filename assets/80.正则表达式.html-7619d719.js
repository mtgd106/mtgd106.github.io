const t=JSON.parse(`{"key":"v-6683421f","path":"/posts/note/MySQL/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/80.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html","title":"正则表达式","lang":"zh-CN","frontmatter":{"title":"正则表达式","author":{"name":"北斗星司"},"category":["数据库"],"tag":["MySQL"],"date":"2023-10-23T15:08:32.000Z","icon":"file","description":"正则表达式 regular expression 引用元字符： 字符 描述 ^ 匹配字符串开始的位置 $ 匹配字符串的结束位置 . 匹配除 \\"\\\\n\\" 之外的任何单个字符 * 匹配前面的子表达式零次或多次 + 匹配前面的子表达式一次或多次 ? 匹配前面的子表达式零次或一次 [...] 匹配括号中的任意一个字符。例如， '[abc]' 可以匹配 \\"plain\\" 中的 'a'。 [^...] 匹配不在括号中的其他字符。 - 可以在字符类中使用，来表示一个范围。例，[a-d]，可以匹配a或b或c或d p1|p2|p3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 匹配 p1 或 p2 或 p3，在找到第一个匹配项时停止 {n} n为非负整数，匹配确定的n次 {n,m} m和n均为非负整数，n&lt;=m。最少匹配n次且最多匹配m次 {n,} 匹配次数大于等于n : 在字符集中使用冒号来指定子字符类。","head":[["meta",{"property":"og:url","content":"https://mtgd106.github.io/posts/note/MySQL/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/80.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"北斗星司"}],["meta",{"property":"og:title","content":"正则表达式"}],["meta",{"property":"og:description","content":"正则表达式 regular expression 引用元字符： 字符 描述 ^ 匹配字符串开始的位置 $ 匹配字符串的结束位置 . 匹配除 \\"\\\\n\\" 之外的任何单个字符 * 匹配前面的子表达式零次或多次 + 匹配前面的子表达式一次或多次 ? 匹配前面的子表达式零次或一次 [...] 匹配括号中的任意一个字符。例如， '[abc]' 可以匹配 \\"plain\\" 中的 'a'。 [^...] 匹配不在括号中的其他字符。 - 可以在字符类中使用，来表示一个范围。例，[a-d]，可以匹配a或b或c或d p1|p2|p3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 匹配 p1 或 p2 或 p3，在找到第一个匹配项时停止 {n} n为非负整数，匹配确定的n次 {n,m} m和n均为非负整数，n&lt;=m。最少匹配n次且最多匹配m次 {n,} 匹配次数大于等于n : 在字符集中使用冒号来指定子字符类。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-06T06:59:59.000Z"}],["meta",{"property":"article:author","content":"北斗星司"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2023-10-23T15:08:32.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-06T06:59:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"正则表达式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-23T15:08:32.000Z\\",\\"dateModified\\":\\"2023-11-06T06:59:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"北斗星司\\"}]}"]]},"headers":[{"level":3,"title":"正则表达式","slug":"正则表达式","link":"#正则表达式","children":[]}],"git":{"createdTime":1699253999000,"updatedTime":1699253999000,"contributors":[{"name":"mtgd106","email":"1487722388@qq.com","commits":1}]},"readingTime":{"minutes":4.24,"words":848},"filePathRelative":"posts/note/MySQL/基础语法/80.正则表达式.md","localizedDate":"2023年10月23日","excerpt":"<!-- permalink: /MySQL/基础语法/正则表达式  -->\\n<h3> 正则表达式</h3>\\n<p><strong>regular expression</strong></p>\\n<p><strong>引用元字符：</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:center\\">字符</th>\\n<th style=\\"text-align:center\\"><strong>描述</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:center\\">^</td>\\n<td style=\\"text-align:center\\">匹配字符串开始的位置</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">$</td>\\n<td style=\\"text-align:center\\">匹配字符串的结束位置</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">.</td>\\n<td style=\\"text-align:center\\">匹配除 \\"\\\\n\\" 之外的任何单个字符</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">*</td>\\n<td style=\\"text-align:center\\">匹配前面的子表达式零次或多次</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">+</td>\\n<td style=\\"text-align:center\\">匹配前面的子表达式一次或多次</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">?</td>\\n<td style=\\"text-align:center\\">匹配前面的子表达式零次或一次</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">[...]</td>\\n<td style=\\"text-align:center\\">匹配括号中的任意一个字符。例如， '[abc]' 可以匹配 \\"plain\\" 中的 'a'。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">[^...]</td>\\n<td style=\\"text-align:center\\">匹配不在括号中的其他字符。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">-</td>\\n<td style=\\"text-align:center\\">可以在字符类中使用，来表示一个范围。例，[a-d]，可以匹配a或b或c或d</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">p1|p2|p3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\\n<td style=\\"text-align:center\\">匹配 p1 或 p2 或 p3，在找到第一个匹配项时停止</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\"><code>{n}</code></td>\\n<td style=\\"text-align:center\\">n为非负整数，匹配确定的n次</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\"><code>{n,m}</code></td>\\n<td style=\\"text-align:center\\">m和n均为非负整数，n&lt;=m。最少匹配n次且最多匹配m次</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\"><code>{n,}</code></td>\\n<td style=\\"text-align:center\\">匹配次数大于等于n</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">:</td>\\n<td style=\\"text-align:center\\">在字符集中使用冒号来指定子字符类。</td>\\n</tr>\\n</tbody>\\n</table>","copyright":{"author":"北斗星司"},"autoDesc":true}`);export{t as data};
