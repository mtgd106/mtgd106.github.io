const e=JSON.parse('{"key":"v-114d9595","path":"/posts/interview/Java%E9%83%A8%E5%88%86/%E5%BC%82%E5%B8%B8%E5%92%8C%E5%BA%8F%E5%88%97%E5%8C%96.html","title":"异常和序列化","lang":"zh-CN","frontmatter":{"title":"异常和序列化","author":{"name":"北斗星司"},"category":["面试题"],"tag":["Java"],"date":"2023-04-22T10:08:32.000Z","icon":"file","description":"异常类 ​ Exception和Error的区别 在 Java 中，所有的异常都有一个共同的祖先： java.lang 包中的 Throwable 类。 Throwable 类有两个重要的子类： Exception：程序本身可以处理的异常，可以通过 catch 来进行捕获。Exception 又可以分为 Checked Exception (受检查异常，必须处理) 和 Unchecked Exception (不受检查异常，可以不处理)。 Error：Error 属于程序无法处理的错误 ，也可以通过 catch 来进行捕获，但不建议通过catch捕获 。   例如， Java 虚拟机运行错误(Virtual MachineError)、虚拟机内存不够错误(OutOfMemoryError)、   类定义错误(NoClassDefFoundError)等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。","head":[["meta",{"property":"og:url","content":"https://mtgd106.github.io/posts/interview/Java%E9%83%A8%E5%88%86/%E5%BC%82%E5%B8%B8%E5%92%8C%E5%BA%8F%E5%88%97%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"北斗星司"}],["meta",{"property":"og:title","content":"异常和序列化"}],["meta",{"property":"og:description","content":"异常类 ​ Exception和Error的区别 在 Java 中，所有的异常都有一个共同的祖先： java.lang 包中的 Throwable 类。 Throwable 类有两个重要的子类： Exception：程序本身可以处理的异常，可以通过 catch 来进行捕获。Exception 又可以分为 Checked Exception (受检查异常，必须处理) 和 Unchecked Exception (不受检查异常，可以不处理)。 Error：Error 属于程序无法处理的错误 ，也可以通过 catch 来进行捕获，但不建议通过catch捕获 。   例如， Java 虚拟机运行错误(Virtual MachineError)、虚拟机内存不够错误(OutOfMemoryError)、   类定义错误(NoClassDefFoundError)等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mtgd106.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-06T06:59:59.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"异常和序列化"}],["meta",{"property":"article:author","content":"北斗星司"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-04-22T10:08:32.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-06T06:59:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"异常和序列化\\",\\"image\\":[\\"https://mtgd106.github.io/\\"],\\"datePublished\\":\\"2023-04-22T10:08:32.000Z\\",\\"dateModified\\":\\"2023-11-06T06:59:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"北斗星司\\"}]}"]]},"headers":[{"level":2,"title":"异常类","slug":"异常类","link":"#异常类","children":[{"level":3,"title":"Exception和Error的区别","slug":"exception和error的区别","link":"#exception和error的区别","children":[]},{"level":3,"title":"Throwable 类常用方法","slug":"throwable-类常用方法","link":"#throwable-类常用方法","children":[]},{"level":3,"title":"异常的处理","slug":"异常的处理","link":"#异常的处理","children":[]}]},{"level":2,"title":"序列化","slug":"序列化","link":"#序列化","children":[{"level":3,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"常见的序列化协议","slug":"常见的序列化协议","link":"#常见的序列化协议","children":[]}]}],"git":{"createdTime":1699253999000,"updatedTime":1699253999000,"contributors":[{"name":"mtgd106","email":"1487722388@qq.com","commits":1}]},"readingTime":{"minutes":13.5,"words":2700},"filePathRelative":"posts/interview/Java部分/异常和序列化.md","localizedDate":"2023年4月22日","excerpt":"<!-- permalink: /面试/Java/异常和序列化  -->\\n<h2> 异常类</h2>\\n<p>​    </p>\\n<h3> Exception和Error的区别</h3>\\n<p>在 Java 中，所有的异常都有一个共同的祖先： <code>java.lang</code> 包中的 <code>Throwable</code> 类。</p>\\n<p><code>Throwable</code> 类有两个重要的子类：</p>\\n<ul>\\n<li>\\n<p><strong><code>Exception</code></strong>：程序本身可以处理的异常，可以通过 <code>catch</code> 来进行捕获。<code>Exception</code> 又可以分为 Checked Exception (受检查异常，必须处理) 和 Unchecked Exception (不受检查异常，可以不处理)。</p>\\n</li>\\n<li>\\n<p><strong><code>Error</code></strong>：Error 属于程序无法处理的错误 ，也可以通过 <code>catch</code> 来进行捕获，但不建议通过<code>catch</code>捕获 。</p>\\n<p>  例如， Java 虚拟机运行错误(<code>Virtual MachineError</code>)、虚拟机内存不够错误(<code>OutOfMemoryError</code>)、</p>\\n<p>  类定义错误(<code>NoClassDefFoundError</code>)等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。</p>\\n</li>\\n</ul>","copyright":{"author":"北斗星司"},"autoDesc":true}');export{e as data};
