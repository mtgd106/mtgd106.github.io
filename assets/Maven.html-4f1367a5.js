import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as o,b as n,d as a,e as s,f as i,a as u}from"./app-a89b456a.js";const d="/assets/image-20230426101346450-f62a9492.png",r="/assets/image-20230426101354366-64263892.png",g="/assets/image-20230426101406503-07d74c1e.png",k="/assets/image-20230426101412301-f8891700.png",v={},m=n("h2",{id:"基础知识",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#基础知识","aria-hidden":"true"},"#"),a(" 基础知识")],-1),b=n("h3",{id:"介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),a(" 介绍")],-1),h=n("p",null,"通过一小段描述信息来管理项目的构建、报告和文档。",-1),x={href:"http://maven.apache.org/",target:"_blank",rel:"noopener noreferrer"},f={href:"http://maven.apache.org/download.cgi",target:"_blank",rel:"noopener noreferrer"},_=u('<h3 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h3><ol><li>标准化的项目结构</li></ol><p>    所有IDE使用Maven构建的项目结构完全一样，所有IDE创建的Maven项目可以通用</p><ol start="2"><li><p>标准化的构建流程(编译，测试，打包，发布...)</p></li><li><p>方便的依赖管理</p></li></ol><p>    即，管理项目所依赖的第三方资源(jar包，插件等)</p><h3 id="模型" tabindex="-1"><a class="header-anchor" href="#模型" aria-hidden="true">#</a> 模型</h3><p>​ <img src="'+d+'" alt="image-20230426101346450" loading="lazy"></p><h3 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构" aria-hidden="true">#</a> 项目结构</h3><p>​ <img src="'+r+`" alt="image-20230426101354366" loading="lazy"></p><h3 id="仓库" tabindex="-1"><a class="header-anchor" href="#仓库" aria-hidden="true">#</a> 仓库</h3><p>​ 本地仓库(Local Repository)：就是自己计算机上的一个目录，存放各种jar包</p><p>​ 远程仓库(Remote Repository)：非本机电脑上的仓库，为本地仓库提供资源，可分为</p><p>​   中央仓库(Central Repository)：由Maven团队维护，存储所有资源的，全球唯一的仓库</p><p>​   私服：一般由公司团队搭建的私有仓库，保存具有版权的资源，包含购买或自主研发的jar包<br> ​</p><p>​ <strong>当在项目中使用坐标引入需要的jar包时，首先会查找本地仓库中是否有对应的jar包，如果有，则直接引用</strong></p><p>​ <strong>如果没有，则去中央仓库中下载对应的jar包到本地仓库。</strong></p><h2 id="安装与配置" tabindex="-1"><a class="header-anchor" href="#安装与配置" aria-hidden="true">#</a> 安装与配置</h2><h3 id="下载" tabindex="-1"><a class="header-anchor" href="#下载" aria-hidden="true">#</a> 下载</h3><p>  在官网下载压缩包并解压缩</p><h3 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量" aria-hidden="true">#</a> 配置环境变量</h3><p>  配置变量名为MAVEN_HOME，变量值为bin文件夹所在目录</p><p>   例：D:\\software\\intellij\\apache-maven-3.8.4</p><p>  在PATH变量中添加%MAVEN_HOME%\\bin</p><p>  在cmd中使用命令mvn -version 来验证安装是否成功</p><h3 id="配置本地仓库" tabindex="-1"><a class="header-anchor" href="#配置本地仓库" aria-hidden="true">#</a> 配置本地仓库</h3><p>  修改文件夹conf/settings.xml文件中的<code>&lt;localRepository&gt;</code>标签，选择一个文件夹作为本地仓库</p><p>   例：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">&gt;</span></span>

	  D:\\software\\intellij\\apache-maven-3.8.4\\mvn_resp

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>   <strong>(conf指的是从官网下载的压缩包中的文件夹；mvn_resp是新建文件夹)</strong></p><h3 id="配置阿里云私服" tabindex="-1"><a class="header-anchor" href="#配置阿里云私服" aria-hidden="true">#</a> 配置阿里云私服</h3><p>   修改conf/settings.xml中的<code>&lt;mirrors&gt;</code>标签，添加如下子标签</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span>
                
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
                
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
                
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
                
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>
           
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置jdk版本" tabindex="-1"><a class="header-anchor" href="#配置jdk版本" aria-hidden="true">#</a> 配置jdk版本</h3><p>  将下列代码放入到<code>&lt;profiles&gt; &lt;/profiles&gt;</code>标签中</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>
  				
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>jdk-1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
  				
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">&gt;</span></span>
        			
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>
        			
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdk</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdk</span><span class="token punctuation">&gt;</span></span>
  				
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">&gt;</span></span>
  				
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
      				
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>
      				
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>
      				
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span>
  				
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
		  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h2><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h3><p>​ <strong>对工程执行相关的构建命令时，要在工程的pom.xml文件所在的目录下执行</strong></p><p>​ <strong>compile：</strong></p><p>​   编译源程序或或测试程序</p><p>​   主程序编译： mvn compile</p><p>​   测试程序编译： mvn test-compile</p><p>​   主程序编译结果存放的目录： target/class</p><p>​   测试程序编译结果存放的目录： target/test-class</p><p>​ <strong>clean</strong>    清理target目录</p><p>​ <strong>test</strong>    测试</p><p>​ <strong>package</strong>    打包(java项目打包成jar文件，web项目打包成war文件)</p><p>​ <strong>install</strong>：</p><p>​    将打包好的文件(即构建过程中生成的jar包)存放到本地仓库，</p><p>​    该jar包在本地仓库中的存放路径是根据pom.xml文件中的坐标生成的</p><p>​    该操作还会将项目中的pom.xml文件转换为xxx.pom文件一起存入本地仓库，所以如果想看一个jar包原始的pom.xml</p><p>      文件，只需查看对应的xxx.pom文件即可，它们只是名字发生了改变，实际上是同一个文件</p><h3 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h3><p>​ 为了让构建过程自动完成，maven设定了三个生命周期，生命周期中的每一个环节对应构建过程中的一个操作</p><p>​ 1.clean：清理工作</p><p>​    pre-clean 执行一些需要在clean之前完成的工作</p><p>​    clean 移除上一次构建生成的文件</p><p>​    post-clean 执行一些需要在clean之后立刻完成的工作</p><p>​ 2.default：核心工作 如：编译，测试，打包，安装等</p><p>​    compile 编译项目的源代码</p><p>​    test 使用合适的单元测试框架运行测试</p><p>​    package 将编译后的代码打包成文件，如jar，war或ear文件</p><p>​    install 安装项目到本地仓库，这样其他项目也可以将该项目作为依赖</p><p>​ 3.site：产生报告，发布站点等</p><p>​    pre-site 执行一些需要在生成站点文档之前完成的工作</p><p>​    site 生成项目的站点文档</p><p>​    post-site 执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</p><p>​    deploy-site 将生成的站点文档部署到特定的服务器上</p><p>​ <strong>同一生命周期内，执行后面的命令，前边的命令会自动执行，</strong> 即，如果执行install命令，则compile，test，package命令会自动执行。</p><p>​ 在项目工程的pom.xml文件所在目录中打开powershell或者在cmd中切换到当前目录，输入mvn compile，则开始编译。</p><h3 id="maven坐标详解" tabindex="-1"><a class="header-anchor" href="#maven坐标详解" aria-hidden="true">#</a> Maven坐标详解</h3><p><strong>坐标：</strong></p><p>​   Maven中的坐标是资源的唯一表示</p><p>​   使用坐标来定义项目或引入项目中需要的依赖</p><p>​   Maven坐标的主要组成：</p><p>​     groupld：定义当前Maven项目隶属组织名称(通常是域名反写)</p><p>​     artifactld：定义当前Maven项目或项目中一个模块名称(通常是模块名称)</p><p>​     version：定义当前项目版本号</p><h3 id="插件和目标" tabindex="-1"><a class="header-anchor" href="#插件和目标" aria-hidden="true">#</a> 插件和目标</h3><p><strong>插件：</strong></p><p>​   maven的核心程序仅仅负责宏观调度，不做具体工作。具体工作是由maven插件完成的。</p><p>​   例如：编译就是由maven-compiler-plugin-3.1.jar插件来执行的</p><p><strong>目标：</strong></p><p>​   一个插件可以对应多个目标，而每一个目标都和生命周期中的某个环节对应</p><p>​   Default生命周期中有compile和test-compile两个和编译相关的环节，这两个环节对应compile和test-compile两个</p><p>   目标，而这两个目标都是由maven-compiler-plugin-3.1.jar插件来完成的。</p><h3 id="java工程与web工程项目结构" tabindex="-1"><a class="header-anchor" href="#java工程与web工程项目结构" aria-hidden="true">#</a> java工程与web工程项目结构</h3><p>​ <img src="`+g+'" alt="image-20230426101406503" loading="lazy"></p><h2 id="依赖管理" tabindex="-1"><a class="header-anchor" href="#依赖管理" aria-hidden="true">#</a> 依赖管理</h2><h3 id="依赖范围" tabindex="-1"><a class="header-anchor" href="#依赖范围" aria-hidden="true">#</a> 依赖范围</h3><p>​ 通过设置坐标的依赖范围，可以设置对应jar包的作用范围：</p><p>                   main目录        test目录       部署到服务器</p><p>​ <img src="'+k+`" alt="image-20230426101412301" loading="lazy"></p><p>​ 使用<code>&lt;scope&gt; &lt;/scope&gt;</code>标签设置</p><p>​ 默认值为compile</p><p>​ 部署到服务器：即，该jar包会不会参于打包，如果参与，则会和war包一起部署到服务器上，如果不参与，则不会部署到服务器上。</p><p>​ provided：Tomcat服务器中已经有的，不需要再导入(如 servlet-api，jsp-api);</p><p>​           所以也不会部署到服务器上，如果再部署到服务器，可能会引起冲突。</p><h3 id="依赖的传递性" tabindex="-1"><a class="header-anchor" href="#依赖的传递性" aria-hidden="true">#</a> 依赖的传递性</h3><ol><li>概念</li></ol><p>​   A依赖B，B依赖C，那么在A没有配置对C的依赖的情况下，A里面能不能直接使用C?</p><ol start="2"><li>传递的原则</li></ol><p>​   在A依赖B，B依赖C的前提下，C能否传递到A，取决于B依赖C时使用的依赖范围</p><p>​   如果B依赖C时使用compile，则可以传递</p><p>​   如果B依赖C时使用test或provided，则不能传递 所以如果A需要这样的jar包，就必须明确配置依赖</p><ol start="3"><li>依赖的冲突</li></ol><p>​   如果A依赖B，B依赖D的1.2版本，同时A又依赖C，C依赖D的2.3版本，如果B和C对D的依赖都是compile，就可能导致</p><p>   在A中D版本的冲突。如果A不想用D的1.2版本，就需要把它排除掉。配置依赖的排除就是阻止某些jar包的传递。</p><p>   配置方式：</p><p>     在<code>&lt;dependency&gt; &lt;/dependency&gt;</code>标签里面配置<code>&lt;exclusion&gt; &lt;/exclusion&gt;</code>标签，如果需要排除多个则使用</p><p>     <code>&lt;exclusions&gt;</code></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
                  		
    ...
                        
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>
                        	
        ...
                           
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
                            	
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>          //配置要排除的依赖的坐标
                                
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>       //不需要配置版本号
                            
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
                            
        ...
                        
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>   
                        
    ...
                  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="继承" tabindex="-1"><a class="header-anchor" href="#继承" aria-hidden="true">#</a> 继承</h2><p>定义：maven工程之间，A工程继承B工程，本质上是A的pom.xml中的配置继承了B的pom.xml文件中的配置</p><p>作用：让父工程统一管理依赖信息的版本</p><p>背景：</p><p>​ 对一个比较大型的项目进行了模块拆分，一个project下面创建了多个module，每一个module都需要配置自己的依赖信息</p><p>​ 在每个module维护各自的依赖信息时容易发生出入，不方便统一管理。</p><p>​ 在使用每一个框架内的不同jar包时，它们应该是同一个版本，所以整个项目使用的框架版本需要统一。</p><p>​ 使用框架时所需要的jar包组合(或者说依赖信息组合)需要经过长期摸索，最终确定一个可用的组合。这个可用的组合在新项目中不应该再重新摸索。</p><p>​ 通过在父工程中为整个项目维护依赖信息的组合就解决了上述问题。</p><p>操作：</p><p>​ 1.创建一个普通的maven工程，创建好后修改打包方式</p><p>​   <strong>只有打包方式为pom的Maven工程才能管理其他工程，该工程称为父工程，不写业务代码，而是专门管理其他工程。</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.vkls.maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
               
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>01-maven-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
               
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
               
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 2.从新创建的父工程的根目录中(即pom.xml文件所在的目录)进入cmd，创建三个子maven工程(或称为模块工程)</p><p>​ 3.创建完成后，父工程的pom.xml文件中会自动添加<code>&lt;modules&gt;</code> 标签</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">&gt;</span></span>
                    
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>01-maven-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>    //01，02，03为创建的三个子工程
                    
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>02-maven-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
                    
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>03-maven-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
                
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 4.在子工程的pom.xml文件中，会自动添加<code>&lt;parent&gt;</code>标签</p><p>​   如果子工程的groupId和version与父工程相同，则在子工程中可以省略不写</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>
                     
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.vkls.maven&gt;    //即父工程的坐标
                     
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>01-maven-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
                     
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
                 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 5.在父工程的pom.xml文件中使用<code>&lt;dependencyManagement&gt;</code>标签统一管理依赖信息</p><p>​   即使在父工程中配置了对依赖的管理，子工程中需要使用哪个依赖还是要明确配置</p><p>​   但在子工程中配置时可以没有<code>&lt;version&gt;</code>，子工程采用父工程中配置的<code>&lt;version&gt;</code>，</p><p>​   如果子工程配置了<code>&lt;version&gt;</code>，则以子工程中配置的版本号为准</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>
                  		
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
                  				
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
                                		
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                                    	
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
                                    	
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.0.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
								
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
								
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>	
										
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org. springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
										
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
										
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.0.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
								
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
								
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
										
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
										
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
										
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.0.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
								
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
					   
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
				  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自定义标签：</p><p>​ 可以在<code>&lt;properties&gt;</code>标签中创建自定义标签，标签名可自定义，标签值就是属性值，使用\${ } 进行引用，类似于C语言中的宏定义。</p><p>​ 自定义标签在父工程和子工程中都可以配置</p><p>​ 例：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>

   	 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vkls.version</span><span class="token punctuation">&gt;</span></span>4.0.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vkls.version</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 将依赖引用中的<code>&lt;version&gt;</code>标签使用该标签替换，如果需要修改版本号就只修改这一标签内的值即可。</p><h2 id="聚合" tabindex="-1"><a class="header-anchor" href="#聚合" aria-hidden="true">#</a> 聚合</h2><ol><li><p>好处</p><p>一键执行Maven命令，很多构建命令都可以在&quot;总工程&quot;中一键执行</p><p>以mvn install为例：maven要求有父工程时先安装父工程；有依赖的工程时，先安装被依赖的工程。</p><p>如果我们自己考虑这些规则就会很麻烦，但在工程聚合之后，在总工程中执行mvn install可以一键完成安装，</p><p>而且会自动按照正确的顺序执行。</p><p>配置聚合之后，各个模块工程会在总工程中展示一个列表，让项目中的各个模块一目了然。</p></li></ol><p>2.配置</p><p>​ 在总工程(即父工程)中配置<code>&lt;modules&gt;</code>标签即可</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">&gt;</span></span>
                    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>01-maven-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>    //01，02，03为创建的三个子工程
                    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>02-maven-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
                    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>03-maven-module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>
           
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,147);function j(y,I){const e=p("Badge"),t=p("ExternalLinkIcon");return c(),o("div",null,[m,b,n("p",null,[a("Apache Maven是一个项目管理和构建工具，它基于项目对象模型(POM)的概念，"),s(e,{text:"beta",type:"warning"})]),h,i(" more "),n("p",null,[a("官网："),n("a",x,[a("http://maven.apache.org/"),s(t)])]),n("p",null,[a("下载："),n("a",f,[a("http://maven.apache.org/download.cgi"),s(t)])]),_])}const M=l(v,[["render",j],["__file","Maven.html.vue"]]);export{M as default};
