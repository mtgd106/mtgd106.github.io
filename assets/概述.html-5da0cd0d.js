const t=JSON.parse('{"key":"v-298a358b","path":"/posts/note/Docker/%E6%A6%82%E8%BF%B0.html","title":"概述","lang":"zh-CN","frontmatter":{"title":"概述","author":{"name":"北斗星司"},"category":["运维"],"tag":["Docker"],"date":"2023-07-13T15:08:32.000Z","icon":"file","description":"问题 大型项目组件较多，运行环境也较为复杂，部署时会碰到一些问题： 依赖关系复杂，容易出现兼容性问题 开发、测试、生产环境有差异 Docker如何解决大型项目依赖关系复杂，不同组件依赖的兼容性问题？ Docker允许开发中将应用、依赖、函数库、配置一起打包，形成可移植镜像 将每个应用放到一个隔离容器去运行，使用沙箱机制，相互隔离，避免产生干扰","head":[["meta",{"property":"og:url","content":"https://mtgd106.github.io/posts/note/Docker/%E6%A6%82%E8%BF%B0.html"}],["meta",{"property":"og:site_name","content":"北斗星司"}],["meta",{"property":"og:title","content":"概述"}],["meta",{"property":"og:description","content":"问题 大型项目组件较多，运行环境也较为复杂，部署时会碰到一些问题： 依赖关系复杂，容易出现兼容性问题 开发、测试、生产环境有差异 Docker如何解决大型项目依赖关系复杂，不同组件依赖的兼容性问题？ Docker允许开发中将应用、依赖、函数库、配置一起打包，形成可移植镜像 将每个应用放到一个隔离容器去运行，使用沙箱机制，相互隔离，避免产生干扰"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mtgd106.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-06T06:59:59.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"概述"}],["meta",{"property":"article:author","content":"北斗星司"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:published_time","content":"2023-07-13T15:08:32.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-06T06:59:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"概述\\",\\"image\\":[\\"https://mtgd106.github.io/\\"],\\"datePublished\\":\\"2023-07-13T15:08:32.000Z\\",\\"dateModified\\":\\"2023-11-06T06:59:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"北斗星司\\"}]}"]]},"headers":[{"level":3,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"Linux容器","slug":"linux容器","link":"#linux容器","children":[]},{"level":3,"title":"与传统虚拟化的区别","slug":"与传统虚拟化的区别","link":"#与传统虚拟化的区别","children":[]},{"level":3,"title":"三要素","slug":"三要素","link":"#三要素","children":[]},{"level":3,"title":"整体架构和底层原理","slug":"整体架构和底层原理","link":"#整体架构和底层原理","children":[]},{"level":3,"title":"安装与卸载(以CentOS7为例)","slug":"安装与卸载-以centos7为例","link":"#安装与卸载-以centos7为例","children":[]},{"level":3,"title":"运行","slug":"运行","link":"#运行","children":[]},{"level":3,"title":"下载镜像过程","slug":"下载镜像过程","link":"#下载镜像过程","children":[]}],"git":{"createdTime":1699253999000,"updatedTime":1699253999000,"contributors":[{"name":"mtgd106","email":"1487722388@qq.com","commits":1}]},"readingTime":{"minutes":8.03,"words":1605},"filePathRelative":"posts/note/Docker/概述.md","localizedDate":"2023年7月13日","excerpt":"<h3> 问题</h3>\\n<p>大型项目组件较多，运行环境也较为复杂，部署时会碰到一些问题：</p>\\n<ul>\\n<li>\\n<p>依赖关系复杂，容易出现兼容性问题</p>\\n</li>\\n<li>\\n<p>开发、测试、生产环境有差异</p>\\n</li>\\n</ul>\\n<p>Docker如何解决大型项目依赖关系复杂，不同组件依赖的兼容性问题？</p>\\n<ul>\\n<li>\\n<p>Docker允许开发中将应用、依赖、函数库、配置一起<strong>打包</strong>，形成可移植镜像</p>\\n</li>\\n<li>\\n<p><strong>将每个应用放到一个隔离容器去运行，使用沙箱机制，相互隔离，避免产生干扰</strong></p>\\n</li>\\n</ul>","copyright":{"author":"北斗星司"},"autoDesc":true}');export{t as data};
