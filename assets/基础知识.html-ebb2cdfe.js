const t=JSON.parse('{"key":"v-130e98ee","path":"/posts/note/Java/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html","title":"基础知识","lang":"zh-CN","frontmatter":{"title":"基础知识","author":{"name":"北斗星司"},"category":["基础知识"],"tag":["语法"],"date":"2023-07-12T15:08:32.000Z","icon":"file","description":"基础知识 1.重写和重载 重写(override) 子类对父类方法的实现过程进行重新编写 方法名和参数列表必须完全相同，返回类型可以不相同，但必须是父类返回值的派生类 访问权限不能比父类的访问权限更低 只有父类的成员方法能被它的子类重写，构造方法不能重写 声明为final的方法不能重写，声明为static的方法不能重写，但可以再次声明 重写方法不能抛出更大范围的异常","head":[["meta",{"property":"og:url","content":"https://mtgd106.github.io/posts/note/Java/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"}],["meta",{"property":"og:site_name","content":"北斗星司"}],["meta",{"property":"og:title","content":"基础知识"}],["meta",{"property":"og:description","content":"基础知识 1.重写和重载 重写(override) 子类对父类方法的实现过程进行重新编写 方法名和参数列表必须完全相同，返回类型可以不相同，但必须是父类返回值的派生类 访问权限不能比父类的访问权限更低 只有父类的成员方法能被它的子类重写，构造方法不能重写 声明为final的方法不能重写，声明为static的方法不能重写，但可以再次声明 重写方法不能抛出更大范围的异常"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mtgd106.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"基础知识"}],["meta",{"property":"article:author","content":"北斗星司"}],["meta",{"property":"article:tag","content":"语法"}],["meta",{"property":"article:published_time","content":"2023-07-12T15:08:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础知识\\",\\"image\\":[\\"https://mtgd106.github.io/\\"],\\"datePublished\\":\\"2023-07-12T15:08:32.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"北斗星司\\"}]}"]]},"headers":[{"level":2,"title":"基础知识","slug":"基础知识","link":"#基础知识","children":[{"level":3,"title":"1.重写和重载","slug":"_1-重写和重载","link":"#_1-重写和重载","children":[]},{"level":3,"title":"2.类","slug":"_2-类","link":"#_2-类","children":[]},{"level":3,"title":"3.构造器","slug":"_3-构造器","link":"#_3-构造器","children":[]},{"level":3,"title":"4.内存","slug":"_4-内存","link":"#_4-内存","children":[]},{"level":3,"title":"5.垃圾回收机制(Garbage Collection)","slug":"_5-垃圾回收机制-garbage-collection","link":"#_5-垃圾回收机制-garbage-collection","children":[]},{"level":3,"title":"6.数组","slug":"_6-数组","link":"#_6-数组","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":10.5,"words":2099},"filePathRelative":"posts/note/Java/基础知识.md","localizedDate":"2023年7月12日","excerpt":"<!-- permalink: /    -->\\n<h2> 基础知识</h2>\\n<h3> 1.重写和重载</h3>\\n<h4> <strong>重写(override)</strong></h4>\\n<p>子类对父类方法的实现过程进行重新编写</p>\\n<ol>\\n<li>\\n<p>方法名和参数列表必须完全相同，返回类型可以不相同，但必须是父类返回值的派生类</p>\\n</li>\\n<li>\\n<p>访问权限不能比父类的访问权限更低</p>\\n</li>\\n<li>\\n<p><strong>只有父类的成员方法能被它的子类重写，构造方法不能重写</strong></p>\\n</li>\\n<li>\\n<p><strong>声明为final的方法不能重写，声明为static的方法不能重写，但可以再次声明</strong></p>\\n</li>\\n<li>\\n<p>重写方法不能抛出更大范围的异常</p>\\n</li>\\n</ol>","copyright":{"author":"北斗星司"},"autoDesc":true}');export{t as data};
